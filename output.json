{
    "report_meta": {
        "scan_target": "files",
        "scanned": [
            "requirements.txt"
        ],
        "scanned_full_path": [
            "/src/requirements.txt"
        ],
        "target_languages": [
            "python"
        ],
        "policy_file": null,
        "policy_file_source": "local",
        "audit_and_monitor": false,
        "api_key": false,
        "account": "",
        "local_database_path": null,
        "safety_version": "3.2.0",
        "timestamp": "2024-05-25 13:30:34",
        "packages_found": 1,
        "vulnerabilities_found": 39,
        "vulnerabilities_ignored": 0,
        "remediations_recommended": 0,
        "telemetry": {
            "safety_options": {
                "files": {
                    "-r": 1
                },
                "json": {
                    "--json": 1
                }
            },
            "safety_version": "3.2.0",
            "safety_source": "cli",
            "os_type": "Linux",
            "os_release": "6.1.90-99.173.amzn2023.x86_64",
            "os_description": "Linux-6.1.90-99.173.amzn2023.x86_64-x86_64-with-debian-12.1",
            "python_version": "3.7.17",
            "safety_command": "check"
        },
        "git": {
            "error": "not-git-repo"
        },
        "project": null,
        "json_version": "1.1",
        "remediations_attempted": 0,
        "remediations_completed": 0,
        "remediation_mode": "NON_INTERACTIVE"
    },
    "scanned_packages": {
        "django": {
            "name": "django",
            "version": "2.2.3",
            "requirements": [
                {
                    "raw": "Django==2.2.3",
                    "extras": [],
                    "marker": null,
                    "name": "Django",
                    "specifier": "==2.2.3",
                    "url": null,
                    "found": "/src/requirements.txt"
                }
            ]
        }
    },
    "affected_packages": {
        "django": {
            "name": "django",
            "version": "2.2.3",
            "requirements": [
                {
                    "raw": "Django==2.2.3",
                    "extras": [],
                    "marker": null,
                    "name": "Django",
                    "specifier": "==2.2.3",
                    "url": null,
                    "found": "/src/requirements.txt"
                }
            ],
            "found": null,
            "insecure_versions": [
                "1.0.1",
                "1.0.2",
                "1.0.3",
                "1.0.4",
                "1.1",
                "1.10",
                "1.10.1",
                "1.10.2",
                "1.10.3",
                "1.10.4",
                "1.10.5",
                "1.10.6",
                "1.10.7",
                "1.10.8",
                "1.10a1",
                "1.10b1",
                "1.10rc1",
                "1.11",
                "1.1.1",
                "1.11.1",
                "1.11.10",
                "1.11.11",
                "1.11.12",
                "1.11.13",
                "1.11.14",
                "1.11.15",
                "1.11.16",
                "1.11.17",
                "1.11.18",
                "1.11.2",
                "1.11.20",
                "1.11.21",
                "1.11.22",
                "1.11.23",
                "1.11.24",
                "1.11.25",
                "1.11.26",
                "1.11.27",
                "1.11.28",
                "1.11.29",
                "1.11.3",
                "1.11.4",
                "1.11.5",
                "1.11.6",
                "1.11.7",
                "1.11.8",
                "1.11.9",
                "1.11a1",
                "1.11b1",
                "1.11rc1",
                "1.1.2",
                "1.1.3",
                "1.1.4",
                "1.2",
                "1.2.1",
                "1.2.2",
                "1.2.3",
                "1.2.4",
                "1.2.5",
                "1.2.6",
                "1.2.7",
                "1.3",
                "1.3.1",
                "1.3.2",
                "1.3.3",
                "1.3.4",
                "1.3.5",
                "1.3.6",
                "1.3.7",
                "1.4",
                "1.4.1",
                "1.4.10",
                "1.4.11",
                "1.4.12",
                "1.4.13",
                "1.4.14",
                "1.4.15",
                "1.4.16",
                "1.4.17",
                "1.4.18",
                "1.4.19",
                "1.4.2",
                "1.4.20",
                "1.4.21",
                "1.4.22",
                "1.4.3",
                "1.4.4",
                "1.4.5",
                "1.4.6",
                "1.4.7",
                "1.4.8",
                "1.4.9",
                "1.5",
                "1.5.1",
                "1.5.10",
                "1.5.11",
                "1.5.12",
                "1.5.2",
                "1.5.3",
                "1.5.4",
                "1.5.5",
                "1.5.6",
                "1.5.7",
                "1.5.8",
                "1.5.9",
                "1.6",
                "1.6.1",
                "1.6.10",
                "1.6.11",
                "1.6.2",
                "1.6.3",
                "1.6.4",
                "1.6.5",
                "1.6.6",
                "1.6.7",
                "1.6.8",
                "1.6.9",
                "1.7",
                "1.7.1",
                "1.7.10",
                "1.7.11",
                "1.7.2",
                "1.7.3",
                "1.7.4",
                "1.7.5",
                "1.7.6",
                "1.7.7",
                "1.7.8",
                "1.7.9",
                "1.8",
                "1.8.1",
                "1.8.10",
                "1.8.11",
                "1.8.12",
                "1.8.13",
                "1.8.14",
                "1.8.15",
                "1.8.16",
                "1.8.17",
                "1.8.18",
                "1.8.19",
                "1.8.2",
                "1.8.3",
                "1.8.4",
                "1.8.5",
                "1.8.6",
                "1.8.7",
                "1.8.8",
                "1.8.9",
                "1.8a1",
                "1.8b1",
                "1.8b2",
                "1.8rc1",
                "1.9",
                "1.9.1",
                "1.9.10",
                "1.9.11",
                "1.9.12",
                "1.9.13",
                "1.9.2",
                "1.9.3",
                "1.9.4",
                "1.9.5",
                "1.9.6",
                "1.9.7",
                "1.9.8",
                "1.9.9",
                "1.9a1",
                "1.9b1",
                "1.9rc1",
                "1.9rc2",
                "2.0",
                "2.0.1",
                "2.0.10",
                "2.0.12",
                "2.0.13",
                "2.0.2",
                "2.0.3",
                "2.0.4",
                "2.0.5",
                "2.0.6",
                "2.0.7",
                "2.0.8",
                "2.0.9",
                "2.0a1",
                "2.0b1",
                "2.0rc1",
                "2.1",
                "2.1.1",
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.7",
                "2.1.8",
                "2.1.9",
                "2.1a1",
                "2.1b1",
                "2.1rc1",
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0a1",
                "5.0b1",
                "5.0rc1"
            ],
            "secure_versions": [
                "5.1a1",
                "5.0.6",
                "5.0.5",
                "5.0.4",
                "5.0.3",
                "4.2.13",
                "4.2.12",
                "4.2.11",
                "3.2.25"
            ],
            "latest_version_without_known_vulnerabilities": "5.1a1",
            "latest_version": "5.0.6",
            "more_info_url": "https://data.safetycli.com/p/pypi/django/97c/"
        }
    },
    "announcements": [],
    "vulnerabilities": [
        {
            "vulnerability_id": "40404",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<2.2.21"
            ],
            "all_vulnerable_specs": [
                ">=3.2a1,<3.2.1",
                "<2.2.21",
                ">=3.0a1,<3.1.9"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django 2.2.21, 3.1.9 and 3.2.1 include a fix for CVE-2021-31542: MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.\r\nhttps://www.djangoproject.com/weblog/2021/may/04/security-releases",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2021-31542",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/40404/97c"
        },
        {
            "vulnerability_id": "50454",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<3.2.15"
            ],
            "all_vulnerable_specs": [
                "<3.2.15",
                ">=4.0a1,<4.0.7"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django 3.2.15 and 4.0.7 include a fix for CVE-2022-36359: An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input.\r\nhttps://www.djangoproject.com/weblog/2022/aug/03/security-releases",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2022-36359",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/50454/97c"
        },
        {
            "vulnerability_id": "65771",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<3.2.25"
            ],
            "all_vulnerable_specs": [
                "<3.2.25",
                ">=4.0a1,<4.2.11",
                ">=5.0a1,<5.0.3"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Affected versions of Django are vulnerable to potential regular expression denial-of-service (REDoS). django.utils.text.Truncator.words() method (with html=True) and truncatewords_html template filter were subject to a potential regular expression denial-of-service attack using a suitably crafted string (follow up to CVE-2019-14232 and CVE-2023-43665).",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2024-27351",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/65771/97c"
        },
        {
            "vulnerability_id": "37656",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                ">=2.2a1,<2.2.8"
            ],
            "all_vulnerable_specs": [
                ">=2.1a1,<2.1.15",
                ">=2.2a1,<2.2.8"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django 2.1.15 and 2.2.8 includes a fix for CVE-2019-19118: A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2019-19118",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/37656/97c"
        },
        {
            "vulnerability_id": "51340",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<3.2.16"
            ],
            "all_vulnerable_specs": [
                "<3.2.16",
                ">=4.0a1,<4.0.8",
                ">=4.1a1,<4.1.2"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2022-41323",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/51340/97c"
        },
        {
            "vulnerability_id": "40414",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                ">=2.2a1,<2.2.22"
            ],
            "all_vulnerable_specs": [
                ">=3.1a1,<3.1.10",
                ">=2.2a1,<2.2.22",
                ">=3.2a1,<3.2.2"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django versions 3.2.2, 3.1.10 and 2.2.22 include a fix for CVE-2021-32052: In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.\r\nhttps://www.djangoproject.com/weblog/2021/may/06/security-releases",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2021-32052",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/40414/97c"
        },
        {
            "vulnerability_id": "60956",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<3.2.21"
            ],
            "all_vulnerable_specs": [
                "<3.2.21",
                ">=4.0a1,<4.1.11",
                ">=4.2a1,<4.2.5"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Affected versions of Django are vulnerable to potential Denial of Service via certain inputs with a very large number of Unicode characters in django.utils.encoding.uri_to_iri().",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2023-41164",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/60956/97c"
        },
        {
            "vulnerability_id": "40638",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<2.2.24"
            ],
            "all_vulnerable_specs": [
                ">=3.0.0a1,<3.1.12",
                ">=3.2.0a1,<3.2.4",
                "<2.2.24"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django 2.2.24, 3.1.12, and 3.2.4 include a fix for CVE-2021-33571: In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+).\r\nhttps://www.djangoproject.com/weblog/2021/jun/02/security-releases",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2021-33571",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/40638/97c"
        },
        {
            "vulnerability_id": "40637",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<2.2.24"
            ],
            "all_vulnerable_specs": [
                "<2.2.24",
                ">=3.0a1,<3.1.12",
                ">=3.2a1,<3.2.4"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.\r\nhttps://www.djangoproject.com/weblog/2021/jun/02/security-releases",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2021-33203",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/40637/97c"
        },
        {
            "vulnerability_id": "39593",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                ">=2.2a1,<2.2.4"
            ],
            "all_vulnerable_specs": [
                ">=1.11a1,<1.11.23",
                ">=2.0a1,<2.1.11",
                ">=2.2a1,<2.2.4"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django 1.11.23, 2.1.11, and 2.2.4 include a fix for CVE-2019-14233: Due to the behavior of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2019-14233",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/39593/97c"
        },
        {
            "vulnerability_id": "39591",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                ">=2.2a1,<2.2.4"
            ],
            "all_vulnerable_specs": [
                ">=1.11a1,<1.11.23",
                ">=2.0a1,<2.1.11",
                ">=2.2a1,<2.2.4"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django 1.11.23, 2.1.11 and 2.2.4 includes a fix for CVE-2019-14235: If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2019-14235",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/39591/97c"
        },
        {
            "vulnerability_id": "39592",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                ">=2.2a1,<2.2.4"
            ],
            "all_vulnerable_specs": [
                ">=1.11a1,<1.11.23",
                ">=2.0a1,<2.1.11",
                ">=2.2a1,<2.2.4"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django 1.11.23, 2.1.11 and 2.2.4 include a fix for CVE-2019-14234: Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of \"OR 1=1\" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2019-14234",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/39592/97c"
        },
        {
            "vulnerability_id": "37326",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                ">=2.2a1,<2.2.4"
            ],
            "all_vulnerable_specs": [
                ">=1.11a1,<1.11.23",
                ">=2.0a1,<2.1.11",
                ">=2.2a1,<2.2.4"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django 1.11.23, 2.1.11 and 2.2.4 include a fix for CVE-2019-14232: If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2019-14232",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/37326/97c"
        },
        {
            "vulnerability_id": "37815",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                ">=2.0a1,<2.2.10"
            ],
            "all_vulnerable_specs": [
                ">=1.11a1,<1.11.28",
                ">=2.0a1,<2.2.10",
                ">=3.0a1,<3.0.3"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django 1.11.28, 2.2.10 and 3.0.3 include a fix for CVE-2020-7471: SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2020-7471",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/37815/97c"
        },
        {
            "vulnerability_id": "61586",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<3.2.22"
            ],
            "all_vulnerable_specs": [
                "<3.2.22",
                ">=4.0a1,<4.1.12",
                ">=4.2a1,<4.2.6"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Affected versions of Django are vulnerable to Denial-of-Service via django.utils.text.Truncator. The django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2023-43665",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/61586/97c"
        },
        {
            "vulnerability_id": "38373",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                ">=2.2a1,<2.2.13"
            ],
            "all_vulnerable_specs": [
                ">=3.0a1,<3.0.7",
                ">=2.2a1,<2.2.13"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2020-13254",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/38373/97c"
        },
        {
            "vulnerability_id": "38372",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                ">=2.2a1,<2.2.13"
            ],
            "all_vulnerable_specs": [
                ">=3.0a1,<3.0.7",
                ">=2.2a1,<2.2.13"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2020-13596",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/38372/97c"
        },
        {
            "vulnerability_id": "38749",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<2.2.16"
            ],
            "all_vulnerable_specs": [
                "<2.2.16",
                ">=3.0a1,<3.0.10",
                ">=3.1a1,<3.1.1"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django 2.2.16, 3.0.10 and 3.1.1 include a fix for CVE-2020-24583: An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). FILE_UPLOAD_DIRECTORY_PERMISSIONS mode was not applied to intermediate-level directories created in the process of uploading files. It was also not applied to intermediate-level collected static directories when using the collectstatic management command.\r\n#NOTE: This vulnerability affects only users of Python versions above 3.7.\r\nhttps://www.djangoproject.com/weblog/2020/sep/01/security-releases",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2020-24583",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/38749/97c"
        },
        {
            "vulnerability_id": "38752",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<2.2.16"
            ],
            "all_vulnerable_specs": [
                "<2.2.16",
                ">=3.0a1,<3.0.10",
                ">=3.1a1,<3.1.1"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "An issue was discovered in Django 2.2 before 2.2.16, 3.0 before 3.0.10, and 3.1 before 3.1.1 (when Python 3.7+ is used). The intermediate-level directories of the filesystem cache had the system's standard umask rather than 0o077.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2020-24584",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/38752/97c"
        },
        {
            "vulnerability_id": "53315",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<3.2.18"
            ],
            "all_vulnerable_specs": [
                "<3.2.18",
                ">=4.0a1,<4.0.10",
                ">=4.1a1,<4.1.7"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django 4.1.7, 4.0.10 and 3.2.18 include a fix for CVE-2023-24580: Potential denial-of-service vulnerability in file uploads.\r\nhttps://www.djangoproject.com/weblog/2023/feb/14/security-releases",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2023-24580",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/53315/97c"
        },
        {
            "vulnerability_id": "37661",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                ">=2.0a1,<2.2.9"
            ],
            "all_vulnerable_specs": [
                ">=1.11a1,<1.11.27",
                ">=2.0a1,<2.2.9",
                ">=3.0a1,<3.0.1"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django 1.11.27, 2.2.9 and 3.0.1 include a fix for CVE-2019-19844: Account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. One mitigation in the new releases is to send password reset tokens only to the registered user email address.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2019-19844",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/37661/97c"
        },
        {
            "vulnerability_id": "40163",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                ">=2.2a1,<2.2.20"
            ],
            "all_vulnerable_specs": [
                ">=2.2a1,<2.2.20",
                ">=3.0a1,<3.0.14",
                ">=3.1a1,<3.1.8"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2021-28658",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/40163/97c"
        },
        {
            "vulnerability_id": "59293",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<3.2.20"
            ],
            "all_vulnerable_specs": [
                ">=4.0a1,<4.1.10",
                ">=4.2a1,<4.2.3",
                "<3.2.20"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Affected versions of Django are vulnerable to a potential ReDoS (regular expression denial of service) in EmailValidator and URLValidator via a very large number of domain name labels of emails and URLs.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2023-36053",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/59293/97c"
        },
        {
            "vulnerability_id": "43041",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<2.2.25"
            ],
            "all_vulnerable_specs": [
                "<2.2.25",
                ">=3.2a1,<3.2.10",
                ">=3.1a1,<3.1.14"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django versions 2.2.25, 3.1.14 and 3.2.10 include a fix for CVE-2021-44420: In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.\r\nhttps://www.djangoproject.com/weblog/2021/dec/07/security-releases/",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2021-44420",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/43041/97c"
        },
        {
            "vulnerability_id": "44742",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<2.2.27"
            ],
            "all_vulnerable_specs": [
                "<2.2.27",
                ">=3.0a1,<3.2.12",
                ">=4.0a1,<4.0.2"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2022-22818",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/44742/97c"
        },
        {
            "vulnerability_id": "44741",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<2.2.27"
            ],
            "all_vulnerable_specs": [
                "<2.2.27",
                ">=3.0a1,<3.2.12",
                ">=4.0a1,<4.0.2"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django 2.2.27, 3.2.12 and 4.0.2 include a fix for CVE-2022-23833: Denial-of-service possibility in file uploads.\r\nhttps://www.djangoproject.com/weblog/2022/feb/01/security-releases",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2022-23833",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/44741/97c"
        },
        {
            "vulnerability_id": "39646",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<2.2.19"
            ],
            "all_vulnerable_specs": [
                ">=3.0a1,<3.0.13",
                ">=3.1a1,<3.1.7",
                "<2.2.19"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django versions 2.2.19, 3.0.13 and 3.1.7 include a fix for CVE-2021-23336: Web cache poisoning via 'django.utils.http.limited_parse_qsl()'. Django contains a copy of 'urllib.parse.parse_qsl' which was added to backport some security fixes. A further security fix has been issued recently such that 'parse_qsl(' no longer allows using ';' as a query parameter separator by default.",
            "is_transitive": true,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2021-23336",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/39646/97c"
        },
        {
            "vulnerability_id": "48040",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<2.2.28"
            ],
            "all_vulnerable_specs": [
                "<2.2.28",
                ">=3.0a1,<3.2.13",
                ">=4.0a1,<4.0.4"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django 2.2.28, 3.2.13 and 4.0.4 include a fix for CVE-2022-28347: A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.\r\nhttps://www.djangoproject.com/weblog/2022/apr/11/security-releases",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2022-28347",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/48040/97c"
        },
        {
            "vulnerability_id": "48041",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<2.2.28"
            ],
            "all_vulnerable_specs": [
                "<2.2.28",
                ">=3.0a1,<3.2.13",
                ">=4.0a1,<4.0.4"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django 2.2.28, 3.2.13 and 4.0.4 include a fix for CVE-2022-28346: An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.\r\nhttps://www.djangoproject.com/weblog/2022/apr/11/security-releases",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2022-28346",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/48041/97c"
        },
        {
            "vulnerability_id": "44423",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<2.2.26"
            ],
            "all_vulnerable_specs": [
                "<2.2.26",
                ">=3.0a1,<3.2.11",
                ">=4.0a1,<4.0.1"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django 2.2.26, 3.2.11 and 4.0.1 include a fix for CVE-2021-45115: UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.\r\nhttps://www.djangoproject.com/weblog/2022/jan/04/security-releases/",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2021-45115",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/44423/97c"
        },
        {
            "vulnerability_id": "44427",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<2.2.26"
            ],
            "all_vulnerable_specs": [
                "<2.2.26",
                ">=3.0a1,<3.2.11",
                ">=4.0a1,<4.0.1"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django 2.2.26, 3.2.11 and 4.0.1 include a fix for CVE-2021-45116: An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.\r\nhttps://www.djangoproject.com/weblog/2022/jan/04/security-releases",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2021-45116",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/44427/97c"
        },
        {
            "vulnerability_id": "44426",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<2.2.26"
            ],
            "all_vulnerable_specs": [
                "<2.2.26",
                ">=3.0a1,<3.2.11",
                ">=4.0a1,<4.0.1"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django 2.2.26, 3.2.11 and 4.0.1 include a fix for CVE-2021-45452: Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.\r\nhttps://www.djangoproject.com/weblog/2022/jan/04/security-releases/",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2021-45452",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/44426/97c"
        },
        {
            "vulnerability_id": "55264",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<3.2.19"
            ],
            "all_vulnerable_specs": [
                "<3.2.19",
                ">=4.0a1,<4.1.9",
                ">=4.2a1,<4.2.1"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django 4.2.1, 4.1.9 and 3.2.19 include a fix for CVE-2023-31047: In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's \"Uploading multiple files\" documentation suggested otherwise.\r\nhttps://www.djangoproject.com/weblog/2023/may/03/security-releases",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2023-31047",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/55264/97c"
        },
        {
            "vulnerability_id": "64976",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<3.2.24"
            ],
            "all_vulnerable_specs": [
                "<3.2.24",
                ">=4.0a1,<4.2.10",
                ">=5.0a1,<5.0.2"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Affected versions of Django are vulnerable to potential denial-of-service in intcomma template filter when used with very long strings.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2024-24680",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/64976/97c"
        },
        {
            "vulnerability_id": "49733",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<3.2.14"
            ],
            "all_vulnerable_specs": [
                "<3.2.14",
                ">=4.0a1,<4.0.6"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django 3.2.14 and 4.0.6 include a fix for CVE-2022-34265: Potential SQL injection via Trunc(kind) and Extract(lookup_name) arguments.\r\nhttps://www.djangoproject.com/weblog/2022/jul/04/security-releases",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2022-34265",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/49733/97c"
        },
        {
            "vulnerability_id": "62126",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<3.2.23"
            ],
            "all_vulnerable_specs": [
                "<3.2.23",
                ">=4.0a1,<4.1.13",
                ">=4.2a1,<4.2.7"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django 4.2.7, 4.1.13 and 3.2.23 include a fix for CVE-2023-46695: Potential denial of service vulnerability in UsernameField on Windows.\r\nhttps://www.djangoproject.com/weblog/2023/nov/01/security-releases",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2023-46695",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/62126/97c"
        },
        {
            "vulnerability_id": "38010",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                ">=2.2a1,<2.2.11"
            ],
            "all_vulnerable_specs": [
                ">=1.11a1,<1.1.29",
                ">=2.2a1,<2.2.11",
                ">=3.0a1,<3.0.4"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django 1.11.29, 2.2.11 and 3.0.4 includes a fix for CVE-2020-9402: Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.\r\nhttps://www.djangoproject.com/weblog/2020/mar/04/security-releases",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2020-9402",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/38010/97c"
        },
        {
            "vulnerability_id": "39521",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                ">=2.0a1,<2.2.18"
            ],
            "all_vulnerable_specs": [
                ">=2.0a1,<2.2.18",
                ">=3.0a1,<3.0.12",
                ">=3.1a1,<3.1.6"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django 2.2.18, 3.0.12 and 3.1.6 include a fix for CVE-2021-3281: The django.utils.archive.extract method (used by \"startapp --template\" and \"startproject --template\") allows directory traversal via an archive with absolute paths or relative paths with dot segments.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2021-3281",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/39521/97c"
        },
        {
            "vulnerability_id": "52945",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": [
                "<3.2.17"
            ],
            "all_vulnerable_specs": [
                "<3.2.17",
                ">=4.0a1,<4.0.9",
                ">=4.1a1,<4.1.6"
            ],
            "analyzed_version": "2.2.3",
            "analyzed_requirement": {
                "raw": "Django==2.2.3",
                "extras": [],
                "marker": null,
                "name": "Django",
                "specifier": "==2.2.3",
                "url": null,
                "found": "/src/requirements.txt"
            },
            "advisory": "Django 3.2.17, 4.0.9 and 4.1.6 includes a fix for CVE-2023-23969: In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large.\r\nhttps://www.djangoproject.com/weblog/2023/feb/01/security-releases",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2023-23969",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://data.safetycli.com/v/52945/97c"
        }
    ],
    "ignored_vulnerabilities": [],
    "remediations": {
        "django": {
            "requirements": {
                "==2.2.3": {
                    "vulnerabilities_found": 39,
                    "version": "2.2.3",
                    "requirement": {
                        "raw": "Django==2.2.3",
                        "extras": [],
                        "marker": null,
                        "name": "Django",
                        "specifier": "==2.2.3",
                        "url": null,
                        "found": "/src/requirements.txt"
                    },
                    "more_info_url": "https://data.safetycli.com/p/pypi/django/97c/"
                }
            },
            "current_version": null,
            "vulnerabilities_found": null,
            "recommended_version": null,
            "other_recommended_versions": [],
            "more_info_url": null
        }
    },
    "remediations_results": {
        "vulnerabilities_fixed": [],
        "remediations_applied": {},
        "remediations_skipped": {}
    }
}
